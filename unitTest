#!/bin/bash

#TODO(HARVEY): use file to check file type instead
#TODO(HARVEY): default to tests folder
# Runs any compiled java class file in the Tomcat Webapps workspace
# USAGE: unitTest [ filename.class ]
# e.g. unitTest CalculatorTest
# e.g. unitTest QueryUtilsTest

if [ "$1" == "--help" ] && [ $# -eq 1 ]; then
	echo "Usage: unitTest [ filename.class ]"
	echo "Description: Runs any compiled java class file in the Tomcat Webapps workspace"
	echo "e.g. unitTest CalculatorTest"
	exit 0
fi

if [ $# -ne 1 ]; then
	echo "Usage: unitTest [ filename.class ]"
	echo "Type unitTest --help for more information"
	exit 1
fi

master_path="/"$(git rev-parse --show-toplevel | sed 's/^C\:/c/g')
if [ "$OSTYPE"  == "linux-gnu" ]; then
    master_path=$(git rev-parse --show-toplevel | sed 's/^C\:/c/g')
fi
class_path="ROOT/WEB-INF/classes"
package_folder="tests"
class_name="$1"
ext=".class"
#trim .class extension from file
#ext=$(echo $class_name | sed 's/\(.*\)\./\1:/' | cut -f2 -d":")

#if [ "$ext" != "class" ]; then
#	echo "$class_name is not a '.class' file"
#	exit 1
#fi


#if file does not exist in specified filepath
if [ ! -f "$master_path/$class_path/$package_folder/$class_name$ext" ]; then
        echo "file not found: $master_path/$class_path/$package_folder/$class_name$ext"
	exit 1
fi

#Use file to check file type
file_type=$(file --mime-type "$master_path/$class_path/$package_folder/$class_name$ext" | cut -f2 -d':' | cut -f2 -d' ')
class_type="application/x-java-applet"
if [ "$file_type" != "$class_type" ]; then
	echo "$class_name is not a '$ext' file"
	echo "$file_type not $class_type"
	exit 1
fi

#if file exists, create a makefile to run java class file
lib_path="ROOT/WEB-INF/lib"

printf "all:\n\tjava -cp $master_path/$class_path" > java2Makefile
for file in $(ls $master_path/$lib_path/*.jar); do
	printf ":$file" >> java2Makefile
done

#if there are / in the class name, replace all of them with .
class=$(echo "$package_folder/$class_name" | sed 's_/_._g')
#grab class name without extension .class
#class=$(echo $class | sed 's/\(.*\)\./\1:/' | cut -f1 -d":")

#junit main class for testing
printf " org.junit.runner.JUnitCore $class" >> java2Makefile

#execute makefile
make -f java2Makefile --silent
rm java2Makefile
